/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package transaksi;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import koneksi.Koneksi;
import javax.swing.table.DefaultTableModel;
import login.Dashboard;

/**
 *
 * @author user
 */
public class TransaksiForm extends javax.swing.JFrame {
    
/**
     * Creates new form MainMenu
     */
    
    DefaultTableModel model = new DefaultTableModel();
    java.sql.Connection con = Koneksi.ConnectionDB();
    
        public TransaksiForm() {
            
        initComponents();
        buka_tabel();
        hargaBarang.disable();
        subHargaBarang.disable();
        totalHarga.disable();
        totalKembalian.disable();
        stokBarang.disable();
        formatWaktu.disable();
        AdminComboBox();
        BarangComboBox();
        DateTime();
        
        //model untuk tabel
            model.addColumn("NO");
            model.addColumn("NAMA BARANG");
            model.addColumn("HARGA");
            model.addColumn("JUMLAH");
            model.addColumn("SUB-TOTAL");
            
    }
        
    private void DateTime() {
        Calendar calendar = Calendar.getInstance();
        Date now = new Date();
        SimpleDateFormat formatHari = new SimpleDateFormat( "EEEE", new Locale("in","ID") );
        SimpleDateFormat formatTanggal = new SimpleDateFormat( "HH:mm yyyy-MM-dd");
        String hari = formatHari.format(calendar.getTime());
        String tanggal = formatTanggal.format(now);
        formatWaktu.setText(hari + " , " + tanggal);
    }
    
    private void AdminComboBox() {
        try {
            String sql = "SELECT nama_admin FROM tb_admin ";
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String namaAdmin = rs.getString("nama_admin");
                adminComboBox.addItem(namaAdmin);
            }

            rs.close();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mengambil data admin: " + e.getMessage());
        }
    }
    
    private void BarangComboBox() {
        try {
            String sql = "SELECT nama_barang FROM tb_barang ";
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String namaBarang = rs.getString("nama_barang");
                barangComboBox.addItem(namaBarang);
                
            }

            rs.close();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mengambil data suplier: " + e.getMessage());
        }
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaPembeli = new javax.swing.JTextField();
        tableBarang = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        btnTransaksi = new javax.swing.JButton();
        btnBatalTransasksi = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        adminComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        subHargaBarang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        hargaBarang = new javax.swing.JTextField();
        totalBayar = new javax.swing.JTextField();
        totalHarga = new javax.swing.JTextField();
        totalDiskon = new javax.swing.JTextField();
        totalKembalian = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        barangComboBox = new javax.swing.JComboBox<>();
        btnTambah = new javax.swing.JButton();
        stokBarang = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        quantityBarang = new javax.swing.JTextField();
        formatWaktu = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("MenuFrame"); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 80, 150));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("KASIR PRODUK");

        jLabel2.setForeground(new java.awt.Color(15, 80, 150));
        jLabel2.setText("NAMA PEMBELI");

        namaPembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaPembeliActionPerformed(evt);
            }
        });

        tabelTransaksi.setForeground(new java.awt.Color(15, 80, 150));
        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NO", "NAMA BARANG", "HARGA", "JUMLAH", "SUBTOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelTransaksi.setRowHeight(30);
        tabelTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelTransaksiMouseClicked(evt);
            }
        });
        tableBarang.setViewportView(tabelTransaksi);

        btnTransaksi.setBackground(new java.awt.Color(15, 80, 150));
        btnTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        btnTransaksi.setText("SELESAI TRANSAKSI");
        btnTransaksi.setBorder(null);
        btnTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaksiActionPerformed(evt);
            }
        });

        btnBatalTransasksi.setBackground(new java.awt.Color(200, 0, 0));
        btnBatalTransasksi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBatalTransasksi.setForeground(new java.awt.Color(255, 255, 255));
        btnBatalTransasksi.setText("BATAL TRANSAKSI");
        btnBatalTransasksi.setBorder(null);
        btnBatalTransasksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalTransasksiActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(70, 70, 70));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("HAPUS");
        btnHapus.setBorder(null);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(15, 80, 150));
        jLabel3.setText("NAMA ADMIN / PENJUAL");

        jLabel4.setForeground(new java.awt.Color(15, 80, 150));
        jLabel4.setText("JAM DAN TANGGAL");

        jLabel5.setForeground(new java.awt.Color(15, 80, 150));
        jLabel5.setText("NAMA BARANG");

        subHargaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subHargaBarangActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(15, 80, 150));
        jLabel6.setText("HARGA BARANG");

        jLabel7.setForeground(new java.awt.Color(15, 80, 150));
        jLabel7.setText("QUANTITY BARANG");

        jLabel8.setForeground(new java.awt.Color(15, 80, 150));
        jLabel8.setText("SUB-TOTAL HARGA");

        hargaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaBarangActionPerformed(evt);
            }
        });

        totalBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBayarActionPerformed(evt);
            }
        });
        totalBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalBayarKeyTyped(evt);
            }
        });

        totalHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalHargaActionPerformed(evt);
            }
        });

        totalDiskon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalDiskonActionPerformed(evt);
            }
        });
        totalDiskon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalDiskonKeyTyped(evt);
            }
        });

        totalKembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalKembalianActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(15, 80, 150));
        jLabel9.setText("TOTAL (Rp) ");

        jLabel10.setForeground(new java.awt.Color(15, 80, 150));
        jLabel10.setText("BAYAR (Rp) ");

        jLabel11.setForeground(new java.awt.Color(15, 80, 150));
        jLabel11.setText("DISKON (%) ");

        jLabel12.setForeground(new java.awt.Color(15, 80, 150));
        jLabel12.setText("KEMBALIAN (Rp) ");

        barangComboBox.setForeground(new java.awt.Color(15, 80, 150));
        barangComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barangComboBoxActionPerformed(evt);
            }
        });

        btnTambah.setBackground(new java.awt.Color(15, 80, 150));
        btnTambah.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setText("TAMBAH BARANG");
        btnTambah.setBorder(null);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        stokBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokBarangActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(15, 80, 150));
        jLabel13.setText("STOCK");

        quantityBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityBarangActionPerformed(evt);
            }
        });
        quantityBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityBarangKeyTyped(evt);
            }
        });

        formatWaktu.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        formatWaktu.setForeground(new java.awt.Color(15, 80, 150));
        formatWaktu.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnRefresh.setBackground(new java.awt.Color(20, 90, 160));
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("REFRESH");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(313, 313, 313)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tableBarang)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(adminComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(namaPembeli, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(btnBatalTransasksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(formatWaktu))
                                .addGap(85, 85, 85)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(subHargaBarang)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(barangComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTambah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addComponent(hargaBarang))
                                                .addGap(18, 18, 18))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(167, 167, 167)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(stokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(quantityBarang))
                                .addGap(94, 94, 94)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(totalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(totalBayar, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(totalDiskon, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(totalKembalian, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(btnTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 104, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namaPembeli, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(totalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(barangComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(adminComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(totalBayar)
                    .addComponent(hargaBarang)
                    .addComponent(stokBarang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalDiskon, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(quantityBarang)
                    .addComponent(formatWaktu, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnBatalTransasksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(tableBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        TransaksiForm activityKasir = new TransaksiForm();

        activityKasir.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void quantityBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityBarangActionPerformed
        int harga = Integer.parseInt(hargaBarang.getText().trim());
        int jumlah = Integer.parseInt(quantityBarang.getText().trim());

        int subtotal = harga * jumlah;

        subHargaBarang.setText(String.valueOf(subtotal));
    }//GEN-LAST:event_quantityBarangActionPerformed

    private void stokBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stokBarangActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed

        String namaProduk = barangComboBox.getSelectedItem().toString().trim();
        int harga = Integer.parseInt(hargaBarang.getText().trim());
        int jumlah = Integer.parseInt(quantityBarang.getText().trim());
        int subtotal = harga * jumlah;

        int stok = Integer.parseInt(stokBarang.getText().trim());

        model.addRow(new Object[]{ model.getRowCount() + 1, namaProduk , harga , jumlah, subtotal });

        tabelTransaksi.setModel(model);

        // Fungsi untuk mengurangi stok barang
        int updateStok = stok - jumlah;
        try {
            String sql = "UPDATE tb_barang SET stok_barang = ? WHERE nama_barang = ?";
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, updateStok);
            pst.setString(2, namaProduk);
            pst.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Mengurangi Stok");
            System.out.println(e.getMessage());
        }

        buka_tabel();

        JOptionPane.showMessageDialog(null, "Barang Berhasil Ditambah");
        hargaBarang.setText("");
        quantityBarang.setText("");
        stokBarang.setText("");

        int total = 0;

        for (int i = 0; i < tabelTransaksi.getRowCount(); i++) {
            int keseluruhan = (int) tabelTransaksi.getValueAt(i, 4); // Kolom subtotal  kolom ke-5 (indeks 4)
            total += keseluruhan;
        }

        totalHarga.setText(String.valueOf(total));

    }//GEN-LAST:event_btnTambahActionPerformed

    private void barangComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barangComboBoxActionPerformed

        String namaProduk = barangComboBox.getSelectedItem().toString().trim();
        try {
            //            String sql = "SELECT harga_barang , stok_barang FROM tb_barang WHERE nama_barang = '" + namaProduk + "',";
            String sql = "SELECT harga_barang, stok_barang FROM tb_barang WHERE nama_barang = ?";
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, namaProduk);
            java.sql.ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                String harga = rs.getString("harga_barang");
                String jumlah = rs.getString("stok_barang");

                hargaBarang.setText(String.valueOf(harga));
                stokBarang.setText(String.valueOf(jumlah));
            }

            rs.close();
            pst.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mengambil detail barang: " + e.getMessage());
        }
    }//GEN-LAST:event_barangComboBoxActionPerformed

    private void totalKembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalKembalianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalKembalianActionPerformed

    private void totalDiskonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalDiskonActionPerformed

        //penjumlahan harga
        int toga = Integer.parseInt(totalHarga.getText().trim());
        int jumbayar = Integer.parseInt(totalBayar.getText().trim());
        int tokon = Integer.parseInt(totalDiskon.getText().trim());

        int diskon = tokon / 100;

        int total = toga - diskon;

        int kembalian = jumbayar - total;

        totalKembalian.setText(String.valueOf(kembalian));

    }//GEN-LAST:event_totalDiskonActionPerformed

    private void totalHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalHargaActionPerformed

    private void totalBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalBayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalBayarActionPerformed

    private void hargaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaBarangActionPerformed

    private void subHargaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subHargaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subHargaBarangActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed

        Object barangObject = barangComboBox.getSelectedItem();
        if (barangObject != null) {
            String namaProduk = barangObject.toString().trim();
            int ok = JOptionPane.showConfirmDialog(null, "Anda Yakin Ingin Menghapus '" + namaProduk + "'?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (ok == 0) {
                try {
                    // Mendapatkan model tabel yang sudah ada
                    DefaultTableModel model = (DefaultTableModel) tabelTransaksi.getModel();

                    // Mencari baris yang sesuai dengan nama produk
                    for (int i = 0; i < model.getRowCount(); i++) {
                        if (model.getValueAt(i, 1).equals(namaProduk)) {
                            model.removeRow(i);
                            JOptionPane.showMessageDialog(null, "Produk Berhasil Dihapus");
                            break;
                        }
                    }

                    // Fungsi untuk mengurangi stok barang
                    int jumlah = Integer.parseInt(quantityBarang.getText().trim());
                    int stok = Integer.parseInt(stokBarang.getText().trim());
                    int updateStok = stok + jumlah;
                    try {
                        String sql = "UPDATE tb_barang SET stok_barang = ? WHERE nama_barang = ?";
                        java.sql.PreparedStatement pst = con.prepareStatement(sql);
                        pst.setInt(1, updateStok);
                        pst.setString(2, namaProduk);
                        pst.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Gagal Mengurangi Stok");
                        System.out.println(e.getMessage());
                    }

                    // Menghapus nilai dari field
                    hargaBarang.setText("");
                    stokBarang.setText("");
                    quantityBarang.setText("");
                    subHargaBarang.setText("");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Proses hapus gagal/koneksi gagal.");
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih barang terlebih dahulu.");
        }

    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalTransasksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalTransasksiActionPerformed
            Dashboard activityDashboard = new Dashboard();

            activityDashboard.setVisible(true);

            this.dispose();
    }//GEN-LAST:event_btnBatalTransasksiActionPerformed

    private void btnTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaksiActionPerformed

        //Validasi Input
        if (!isValidString(namaPembeli.getText())) {
            JOptionPane.showMessageDialog(null, "Kode Supplier tidak boleh kosong.");
            return;
        }

        try {
            String admin = adminComboBox.getSelectedItem().toString().trim();
            String sql = "INSERT INTO tb_transaksi (tanggal_transaksi, admin_transaksi, user_transaksi, totalharga_transaksi, kembalian_transaksi ) VALUES"
            + "(?, ?, ?, ?, ?)";
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, formatWaktu.getText());
            pst.setString(2, admin);
            pst.setString(3, namaPembeli.getText());
            pst.setString(4, totalHarga.getText());
            pst.setString(5, totalKembalian.getText());
            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, " Transaksi Sudah Selesai Terima Kasih.");
            namaPembeli.setText("");
            hargaBarang.setText("");
            stokBarang.setText("");
            quantityBarang.setText("");
            subHargaBarang.setText("");
            totalHarga.setText("");
            totalDiskon.setText("");
            totalKembalian.setText("");
            totalBayar.setText("");

            // Set focus
            namaPembeli.requestFocusInWindow();
            model.setRowCount(0);
            //            model.addRow(new Object[]{model.getRowCount() + 1, namaProduk, harga, jumlah, subtotal});
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnTransaksiActionPerformed

    private void tabelTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelTransaksiMouseClicked
        int row = tabelTransaksi.getSelectedRow();

        if (row != -1) { // Memastikan ada baris yang dipilih
            DefaultTableModel model = (DefaultTableModel) tabelTransaksi.getModel();

            // Mengatur nilai-nilai ke komponen input
            String barang = model.getValueAt(row, 1).toString();
            String harga = model.getValueAt(row, 2).toString();
            String jumlah = model.getValueAt(row, 3).toString();
            String subTotal = model.getValueAt(row, 4).toString();

            // Mengatur nilai ke JComboBox dan JTextField
            barangComboBox.setSelectedItem(barang);
            hargaBarang.setText(harga);
            quantityBarang.setText(jumlah);
            subHargaBarang.setText(subTotal);
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris di tabel terlebih dahulu.");
        }

    }//GEN-LAST:event_tabelTransaksiMouseClicked

    private void namaPembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaPembeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaPembeliActionPerformed

    private void quantityBarangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityBarangKeyTyped
        char character = evt.getKeyChar();
        if (!Character.isDigit(character)) {
            evt.consume();
        }
    }//GEN-LAST:event_quantityBarangKeyTyped

    private void totalBayarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalBayarKeyTyped
        char character = evt.getKeyChar();
        if (!Character.isDigit(character)) {
            evt.consume();
        }
    }//GEN-LAST:event_totalBayarKeyTyped

    private void totalDiskonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalDiskonKeyTyped
        char character = evt.getKeyChar();
        if (!Character.isDigit(character)) {
            evt.consume();
        }
    }//GEN-LAST:event_totalDiskonKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaksiForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> adminComboBox;
    private javax.swing.JComboBox<String> barangComboBox;
    private javax.swing.JButton btnBatalTransasksi;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTransaksi;
    private javax.swing.JTextField formatWaktu;
    private javax.swing.JTextField hargaBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField namaPembeli;
    private javax.swing.JTextField quantityBarang;
    private javax.swing.JTextField stokBarang;
    private javax.swing.JTextField subHargaBarang;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JScrollPane tableBarang;
    private javax.swing.JTextField totalBayar;
    private javax.swing.JTextField totalDiskon;
    private javax.swing.JTextField totalHarga;
    private javax.swing.JTextField totalKembalian;
    // End of variables declaration//GEN-END:variables


    private void buka_tabel() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("NO");
        model.addColumn("NAMA BARANG");
        model.addColumn("HARGA");
        model.addColumn("JUMLAH");
        model.addColumn("SUB-TOTAL");

    }


    private boolean isValidString(String input) {
        return input != null && !input.trim().isEmpty();
    }
    

    
    //end 

  
    }

